// <auto-generated />
using EvaluationSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvaluationSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231020040410_AddTables")]
    partial class AddTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EvaluationSystem.Models.ProfessorTableModel", b =>
                {
                    b.Property<int>("professorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("professorId"), 1L, 1);

                    b.Property<string>("professorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("professorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("professorId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("EvaluationSystem.Models.StudentAnswersTable", b =>
                {
                    b.Property<int>("answerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("answerId"), 1L, 1);

                    b.Property<string>("answerFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answerFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answerOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answerThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answerTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("professorFK")
                        .HasColumnType("int");

                    b.Property<int>("studentFK")
                        .HasColumnType("int");

                    b.HasKey("answerId");

                    b.HasIndex("professorFK");

                    b.HasIndex("studentFK");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("EvaluationSystem.Models.StudentTableModel", b =>
                {
                    b.Property<int>("studentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentNumber"), 1L, 1);

                    b.Property<string>("studentCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentYearLevel")
                        .HasColumnType("int");

                    b.HasKey("studentNumber");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EvaluationSystem.Models.StudentAnswersTable", b =>
                {
                    b.HasOne("EvaluationSystem.Models.ProfessorTableModel", "professorId")
                        .WithMany()
                        .HasForeignKey("professorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaluationSystem.Models.StudentTableModel", "studentNumber")
                        .WithMany()
                        .HasForeignKey("studentFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("professorId");

                    b.Navigation("studentNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
